为 PHP 代码编写自动化测试被认为是一种最佳实践并且可以形成构建良好的应用程序。自动化测试是一种伟大的工具，用于确保你的应用程序在进行更改或添加
新功能时不会被破坏，并且不应该被忽略。

PHP 有几种不同类型的测试工具（或框架），它们使用了不同的方法 —— 所有这些测试工具（或框架）都尝试避免手动测试和对大型的质量保证团队的需要，如
果只是为了确保最近的更改不会破坏现有功能的话。

测试驱动开发
    来自 维基百科：
        测试驱动的开发（TDD）是一种软件开发过程，依赖于对一个很短的开发周期的重复：首先开发人员编写一个失败的自动化测试，它定义了所需的改进
        或新功能，然后产生代码以通过测试并且最后重构新代码到可接受的标准。Kent Beck 被认为是开发或“重新发现”了这种技术，他在 2003 年指出，
        TDD 鼓励简单的设计和激发信心。

    你可以为你的应用程序进行几种不同类型的测试：

    单元测试
        单元测试是一种确保函数、类和方法按预期工作的编程方法，从你构建出它们开始，一直到开发周期结束。通过检查进出各种函数和方法的值，你可以
        确信内部逻辑是工作正常的。通过使用依赖注入以及构建“mock”类和 stub，你可以验证依赖项被正确地用于更好的测试覆盖率。

        当你创建一个类或函数时，你应该为它必须具有的每个行为创建一个单元测试。在最基本的层面上，你应该确保如果你发送了错误的参数，它就会报错
        ；如果你发送了有效的参数，它就会正常工作。这将有助于确保当你在开发周期的后期对该类或函数进行了更改后，旧的功能仍能按预期工作。唯一的
        替代方法是在 test.php 中使用 var_dump()，但这是没办法建立一个应用程序的 —— 无论大或小。

        单元测试的另一个用途是为开源做贡献。如果你可以编写一个测试来显示损坏的功能（即失败），然后修复它，并显示测试通过，那么补丁就更有可能
        被接受。如果你运行一个接受 pull 请求的项目，那么你应该建议将此作为一个要求。

        PHPUnit 被公认为是为 PHP 应用程序编写单元测试的测试框架，但还有一些其他的选择：
            atoum
            Kahlan
            Peridot
            SimpleTest

    集成测试
        来自 维基百科：
            集成测试（有时称为集成（Integration）和测试（Testing），缩写为“I&T”）是软件测试中的一个阶段，在这个阶段中，多个单独的软件模
            块被组合成一个组然后被测试。它发生在单元测试之后和验收测试之前。集成测试将经过单元测试的模块作为其输入模块，将它们组合进更大的聚
            合中，将一个集成测试计划中定义的测试应用到这些聚合上，并将集成系统作为输出交付给系统测试。

        许多可以被用于单元测试的工具同样可以用于集成测试，因为它们使用了许多相同的原则。

    功能测试
        有时也称为验收测试，功能测试通过使用工具去创建实际使用你的应用程序的自动化测试，而不只是验证各个代码单元的行为是否正确以及各个单元之
        间是否能够正确的互相交流。这些工具通常使用实际数据并模拟应用程序的实际用户。

    功能测试的工具
        Selenium
        Mink
        Codeception 是一个包含验收测试工具的全栈测试框架
        Storyplayer 是一个全栈测试框架，它包含了对按需创建和销毁测试环境的支持。

        个人补充：Puppeteer、Nightmare 和 Cypress

行为驱动开发
    有两种不同类型的行为驱动开发（BDD）：SpecBDD 和 StoryBDD。SpecBDD 关注代码的技术行为，而 StoryBDD 关注于业务行为或特性行为或交互。
    两种类型的 BDD 都有 PHP 的框架可用。

    使用 StoryBDD，你可以编写人类可读的故事去描述应用程序的行为。然后，这些故事可以作为针对应用程序的实际测试去运行。StoryBDD 在 PHP 应用
    程序中所使用的框架是 Behat ，它的灵感来自 Ruby 的 Cucumber 项目并且实现了用于描述特性行为的 Gherkin DSL 。

    使用 SpecBDD，你可以编写描述实际代码应有的行为的规范。你不是在测试一个函数或方法，而是描述该函数或方法的行为方式。PHP 为此提供了
    PHPSpec 框架。这个框架的灵感来自 Ruby 的 RSpec 项目。

    BDD 链接
        Behat，PHP 的 StoryBDD 框架，灵感来自于 Ruby 的 Cucumber 项目。
        PHPSpec，PHP 的 SpecBDD 框架, 灵感来自于 Ruby 的 RSpec 项目。
        Codeception 是一个使用 BDD 原则的全栈测试框架。

补充的测试工具
    除了个别的测试和行为驱动框架，还有一些通用框架和帮助库对于任何所采用的方法都非常有用。

    工具链接
        Selenium 是一个浏览器自动化工具，它可以与 PHPUnit 集成。
        Mockery 是一个 Mock 对象框架，它可以与 PHPUnit 或 PHPSpec 集成。
        Prophecy 是一个非常固执己见但非常强大和灵活的 PHP 对象 mock 框架。它与 PHPSpec 集成在一起，而且可以与 PHPUnit 一起使用。
        php-mock 是一个帮助 mock PHP 原生函数的库。
        Infection 是 变异测试 的一个 PHP 实现，它用于帮助衡量你的测试的有效性。
