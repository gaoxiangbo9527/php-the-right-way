为 PHP 代码编写自动化测试被认为是一种最佳实践并且可以形成构建良好的应用程序。自动化测试是一种伟大的工具，用于确保你的应用程序在进行更改或添加
新功能时不会被破坏，并且不应该被忽略。

PHP 有几种不同类型的测试工具（或框架），它们使用了不同的方法 —— 所有这些测试工具（或框架）都尝试避免手动测试和对大型的质量保证团队的需要，如
果只是为了确保最近的更改不会破坏现有功能的话。

测试驱动开发
    来自 维基百科：
        测试驱动的开发（TDD）是一种软件开发过程，依赖于对一个很短的开发周期的重复：首先开发人员编写一个失败的自动化测试，它定义了所需的改进
        或新功能，然后产生代码以通过测试并且最后重构新代码到可接受的标准。Kent Beck 被认为是开发或“重新发现”了这种技术，他在 2003 年指出，
        TDD 鼓励简单的设计和激发信心。

    你可以为你的应用程序进行几种不同类型的测试：

    单元测试

        PHPUnit 被公认为是为 PHP 应用程序编写单元测试的测试框架，但还有一些其他的选择：

        atoum
        Kahlan
        Peridot
        SimpleTest

    集成测试
        来自 维基百科：
            集成测试（有时称为集成（Integration）和测试（Testing），缩写为“I&T”）是软件测试中的一个阶段，在这个阶段中，多个单独的软件模
            块被组合成一个组然后被测试。它发生在单元测试之后和验收测试之前。集成测试将经过单元测试的模块作为其输入模块，将它们组合进更大的聚
            合中，将一个集成测试计划中定义的测试应用到这些聚合上，并将集成系统作为输出交付给系统测试。

        许多可以被用于单元测试的工具同样可以用于集成测试，因为它们使用了许多相同的原则。

    功能测试
        有时也称为验收测试，功能测试通过使用工具去创建实际使用你的应用程序的自动化测试，而不只是验证各个代码单元的行为是否正确以及各个单元之
        间是否能够正确的互相交流。这些工具通常使用实际数据并模拟应用程序的实际用户。

    功能测试的工具
        Selenium
        Mink
        Codeception 是一个包含验收测试工具的全栈测试框架
        Storyplayer 是一个全栈测试框架，它包含了对按需创建和销毁测试环境的支持。

        个人补充：Puppeteer、Nightmare 和 Cypress

行为驱动开发

补充的测试工具
